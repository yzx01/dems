<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:security="http://www.springframework.org/schema/security"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd


			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
			http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd">

	<!--
		SPRING SETUP 
	 -->

	<!-- Load properties so we can easily change them -->
	<context:property-placeholder location="classpath:application.properties" />
	
	<!-- Enable Annotation Configuration in order to automatically scan controllers-->
	<context:annotation-config />
	
	<!-- Allow @Transactional annotations for transaction management -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<!-- Search for Rest Resources and configure them automatically -->
	<context:component-scan base-package="jlm.rest.resources" />

	<!--
		DATABASE SETUP 
	 -->

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />
		<property name="driverClassName" value="${db.driver}" />
		<property name="url" value="${db.url}" />
	</bean>

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="persistenceUnitName" value="examplePU" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="generateDdl" value="true" />
				<property name="showSql" value="true" />
			</bean>
		</property>
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<bean id="blogPostDao" class="jlm.dao.blogpost.JpaBlogPostDao">
	</bean>

	<bean id="assertMaintainDao" class="jlm.dao.assertmain.JpaAssertMaintainDao">
	</bean>

	<bean id="assertKksDao" class="jlm.dao.assertkks.JpaAssertKksDao">
	</bean>

	<bean id="componentManageDao" class="jlm.dao.componentmanage.JpaComponentManageDao">
	</bean>

	<bean id="assertMonthOperationDao" class="jlm.dao.assertmonthoperation.JpaAssertMonthOperationDao"></bean>

	<bean id="assertChangingDao" class="jlm.dao.assertchanging.JpaAssertChangingDao"></bean>

	<bean id="userDao" class="jlm.dao.user.JpaUserDao">
	</bean>

	<bean id="accessTokenDao"
		  class="jlm.dao.accesstoken.JpaAccessTokenDao">
	</bean>

	<bean id="userService" class="jlm.service.DaoUserService">
		<constructor-arg ref="userDao"/>
		<constructor-arg ref="accessTokenDao"/>
	</bean>
	
	<bean id="dataBaseInitializer" class="jlm.dao.DataBaseInitializer"><!--*init-method="initDataBase"-->
		<constructor-arg ref="userDao" />
		<constructor-arg ref="blogPostDao"/>
		<constructor-arg ref="passwordEncoder" />
	</bean>

	<!--
		INIT REST COMPONENTS 
	 -->
	
	<bean id="objectMapper" class="org.codehaus.jackson.map.ObjectMapper" />
	
	<!-- 
		SPRING SECURITY SETUP
	-->
	
	<bean id="passwordEncoder" class="org.springframework.security.crypto.password.StandardPasswordEncoder">
		<constructor-arg value="${app.secret}" />
	</bean>
	
	<security:authentication-manager id="authenticationManager">
		<security:authentication-provider user-service-ref="userService">
			<security:password-encoder ref="passwordEncoder"></security:password-encoder>
		</security:authentication-provider>
	</security:authentication-manager>
	
	<security:http
		entry-point-ref="unauthorizedEntryPoint"
		authentication-manager-ref="authenticationManager"
		create-session="stateless">
		<security:csrf disabled="true"/>
		<security:custom-filter ref="authenticationTokenProcessingFilter" position="PRE_AUTH_FILTER" />
		<security:intercept-url pattern="/rest/user/authenticate" access="permitAll" />
		<security:intercept-url method="GET" pattern="/rest/blogposts/**" access="permitAll"/>
		<security:intercept-url method="PUT" pattern="/rest/blogposts/**" access="hasRole('ADMIN')"/>
		<security:intercept-url method="POST" pattern="/rest/blogposts/**" access="hasRole('ADMIN')"/>
		<security:intercept-url method="DELETE" pattern="/rest/blogposts/**" access="permitAll"/>

		<security:intercept-url method="GET" pattern="/rest/assertmains/**" access="permitAll"/>
		<security:intercept-url method="PUT" pattern="/rest/assertmains/**" access="permitAll"/>
		<security:intercept-url method="POST" pattern="/rest/assertmains/**" access="permitAll"/>
		<security:intercept-url method="DELETE" pattern="/rest/assertmains/**" access="permitAll"/>

		<security:intercept-url method="GET" pattern="/rest/assertkks/**" access="permitAll"/>
		<security:intercept-url method="PUT" pattern="/rest/assertkks/**" access="permitAll"/>
		<security:intercept-url method="POST" pattern="/rest/assertkks/**" access="permitAll"/>
		<security:intercept-url method="DELETE" pattern="/rest/assertkks/**" access="permitAll"/>

		<security:intercept-url method="GET" pattern="/rest/componentmanages/**" access="permitAll"/>
		<security:intercept-url method="PUT" pattern="/rest/componentmanages/**" access="permitAll"/>
		<security:intercept-url method="POST" pattern="/rest/componentmanages/**" access="permitAll"/>
		<security:intercept-url method="DELETE" pattern="/rest/componentmanages/**" access="permitAll"/>

		<security:intercept-url method="GET" pattern="/rest/assertmonthoperations/**" access="permitAll"/>
		<security:intercept-url method="PUT" pattern="/rest/assertmonthoperations/**" access="permitAll"/>
		<security:intercept-url method="POST" pattern="/rest/assertmonthoperations/**" access="permitAll"/>
		<security:intercept-url method="DELETE" pattern="/rest/assertmonthoperations/**" access="permitAll"/>

		<security:intercept-url method="GET" pattern="/rest/assertchangings/**" access="permitAll"/>
		<security:intercept-url method="PUT" pattern="/rest/assertchangings/**" access="permitAll"/>
		<security:intercept-url method="POST" pattern="/rest/assertchangings/**" access="permitAll"/>
		<security:intercept-url method="DELETE" pattern="/rest/assertchangings/**" access="permitAll"/>
	</security:http>

	<bean id="unauthorizedEntryPoint" class="jlm.rest.UnauthorizedEntryPoint" />

	<bean id="authenticationTokenProcessingFilter" class="jlm.rest.AuthenticationTokenProcessingFilter">
		<constructor-arg ref="userService"/>
	</bean>

</beans>
